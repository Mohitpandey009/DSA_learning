in this question i am dividing a number without using any arithmatical operator.

for solviing this question i am using the left shift operator(<<)

understand with example -
    -> working of left shift operator

  assume    n=10
            x=1
  now      n=n<<x  (left shifting by 1 : x=1)

  so the answer is 
    => n = n*2^x        (^ indigating the power here)
    => 10*2^1 = 20

next time n become 20
    => 20*2^1 = 40

    so here if we analyze the pattern every time its multipletiply the n with the (2) power of how many bit you sifted left 

 now do one more thing add a (multiple=1,n=10) variable to track n   
    n = n<<1 
    multiple = multiple<<1

    result ->

    n = 10<<1                       multiple =1<<1  
     => 10*2^1 = 20                   => 1*2^1 = 2 
     => 20*2^1 = 40                   => 2*2^1 = 4
     => 40*2^1 = 80                   => 4*2^1 = 8  
     => 80*2^1 = 160                  => 8*2^1 = 16  
                                      
        here look at the n and multiple both grow same so we just compare the dividend with n and calculate the multiple corresponding that 

        
       
    
     